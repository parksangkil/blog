<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>test on Park Sangkil Tech Blog</title>
    <link>https://parksangkil.github.io/ko/tags/test/</link>
    <description>Recent content in test on Park Sangkil Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>ht1911@gmail.com (Park SangKil)</managingEditor>
    <webMaster>ht1911@gmail.com (Park SangKil)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 05 Aug 2020 06:13:40 +0900</lastBuildDate>
    
        <atom:link href="https://parksangkil.github.io/ko/tags/test/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Golang Test</title>
        <link>https://parksangkil.github.io/ko/posts/golang.test/</link>
        <pubDate>Wed, 05 Aug 2020 06:13:40 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Wed, 05 Aug 2020 06:13:40 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.test/</guid>
        <description>Example of parsing an input text containing rectangles https://github.com/mcaci/rectangles-example HTTP mocking to test API services for chaos scenarios https://github.com/Trendyol/gaos Golang Testing — Mocking Redis https://itnext.io/golang-testing-mocking-redis-b48d09386c70 Write Go unit tests for db CRUD with random data https://dev.to/techschoolguru/write-go-unit-tests-for-db-crud-with-random-data-53no?utm_source=dormosheio&amp;amp;utm_campaign=dormosheio Vegeta로 웹성능 테스트 해보기 (golang echo vs python3 http.server) https://www.alinos.net/entry/vegeta-%EC%9B%B9%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%88%B4-PoC Automatically generate Go test boilerplate from your source code. https://github.com/cweill/gotests</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>test</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Test</title>
        <link>https://parksangkil.github.io/ko/posts/test/</link>
        <pubDate>Sun, 19 Jul 2020 08:22:02 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Sun, 19 Jul 2020 08:22:02 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/test/</guid>
        <description>Automation for iOS, Android, and Windows Apps.
https://github.com/appium/appium
Most popular Mocking framework for unit tests written in Java
https://github.com/mockito/mockito
Automated auditing, performance metrics, and best practices for the web.
https://github.com/GoogleChrome/lighthouse
A hinting engine for the web
https://github.com/webhintio/hint
Load test as code
https://gatling.io/
Writing integration tests with Testcontainers
https://balarawool.me/writing-integration-tests-with-testcontainers/
To Puppeteer, or to Cypress
https://dev.to/jalal246/to-puppeteer-or-to-cypress-4ccl
Protractor Tutorial
https://www.javacodegeeks.com/2020/07/protractor-tutorial-end-to-end-testing-for-angularjs.html
Bash Automated Testing System
https://github.com/bats-core/bats-core
An open source load testing tool.
https://locust.io/
A modern load testing tool, using Go and JavaScript</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>test</category>
            
          
            
              <category>QA</category>
            
          
        
        
          
            
              <category>Test</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>