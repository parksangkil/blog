<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Golang on Park Sangkil Tech Blog</title>
    <link>https://parksangkil.github.io/ko/categories/golang/</link>
    <description>Recent content in Golang on Park Sangkil Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>ht1911@gmail.com (Park SangKil)</managingEditor>
    <webMaster>ht1911@gmail.com (Park SangKil)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 05 Aug 2020 06:13:40 +0900</lastBuildDate>
    
        <atom:link href="https://parksangkil.github.io/ko/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Golang Test</title>
        <link>https://parksangkil.github.io/ko/posts/golang.test/</link>
        <pubDate>Wed, 05 Aug 2020 06:13:40 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Wed, 05 Aug 2020 06:13:40 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.test/</guid>
        <description>Example of parsing an input text containing rectangles https://github.com/mcaci/rectangles-example HTTP mocking to test API services for chaos scenarios https://github.com/Trendyol/gaos Golang Testing — Mocking Redis https://itnext.io/golang-testing-mocking-redis-b48d09386c70 Write Go unit tests for db CRUD with random data https://dev.to/techschoolguru/write-go-unit-tests-for-db-crud-with-random-data-53no?utm_source=dormosheio&amp;amp;utm_campaign=dormosheio Vegeta로 웹성능 테스트 해보기 (golang echo vs python3 http.server) https://www.alinos.net/entry/vegeta-%EC%9B%B9%EC%84%B1%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%88%B4-PoC</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>test</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Standard</title>
        <link>https://parksangkil.github.io/ko/posts/golang.standard/</link>
        <pubDate>Fri, 31 Jul 2020 06:06:11 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Fri, 31 Jul 2020 06:06:11 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.standard/</guid>
        <description>Docker 생성 참고 https://github.com/passwall/passwall-server</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>golang</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Interview</title>
        <link>https://parksangkil.github.io/ko/posts/golang.interview/</link>
        <pubDate>Sun, 28 Jun 2020 16:03:47 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Sun, 28 Jun 2020 16:03:47 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.interview/</guid>
        <description>Collection of Technical Interview Questions solved with Go
https://github.com/shomali11/go-interview
Roadmap to becoming a Go developer in 2020
https://github.com/Alikhll/golang-developer-roadmap</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>Golang_Interview</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Algorithm</title>
        <link>https://parksangkil.github.io/ko/posts/golang.algorithm/</link>
        <pubDate>Mon, 22 Jun 2020 04:43:02 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Mon, 22 Jun 2020 04:43:02 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.algorithm/</guid>
        <description>MaxHeap in Golang
https://golangbyexample.com/maxheap-in-golang/
A collection of 100+ popular LeetCode problems solved in Go.
https://github.com/austingebauer/go-leetcode
LeetCode by Go
https://github.com/halfrost/LeetCode-Go
datastructure-algorithm
https://github.com/code-mcx/datastructure-algorithm
algorithm-pattern
https://github.com/greyireland/algorithm-pattern
An implementation in GO (golang) of the basic algorithms and data structure.
https://github.com/maximelamure/algorithms
A collection of 100+ popular LeetCode problems solved in Go.
https://github.com/austingebauer/go-leetcode
Data Structures and Algorithmic Thinking With Go
https://github.com/careermonk/data-structures-and-algorithmic-thinking-with-go</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>algorithm</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Design Pattern</title>
        <link>https://parksangkil.github.io/ko/posts/golang.designpattern/</link>
        <pubDate>Mon, 22 Jun 2020 03:57:53 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Mon, 22 Jun 2020 03:57:53 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.designpattern/</guid>
        <description>Go Patterns
http://tmrts.com/go-patterns/
Flyweight Design Pattern in Go (Golang)
https://golangbyexample.com/flyweight-design-pattern-golang/</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>Golang_Design_Pattern</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Project</title>
        <link>https://parksangkil.github.io/ko/posts/golang.project/</link>
        <pubDate>Sat, 13 Jun 2020 06:23:37 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Sat, 13 Jun 2020 06:23:37 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.project/</guid>
        <description>Go Version Manager
https://github.com/moovweb/gvm
Standard Go Project Layout
https://github.com/golang-standards/project-layout
Golang Service Project Baseline
https://github.com/safing/portbase
Cloud Native GoLang Microservices - gRPC, GraphQL
https://github.com/xmlking/micro-starter-kit
This repo contains examples and implementations of different types of GRPC services and APIs using Golang.
https://github.com/itsksaurabh/go-grpc-examples
A GraphQL-based Web App written with Go, React and MongoDB
https://github.com/Shpota/skmz
Building a TODO API in Golang with Kubernetes
https://levelup.gitconnected.com/building-a-todo-api-in-golang-with-kubernetes-1ec593f85029
High Performance, Kubernetes Native Object Storage
https://github.com/minio
Building Microservices with Go</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>golang_project</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Study</title>
        <link>https://parksangkil.github.io/ko/posts/golang.study/</link>
        <pubDate>Sat, 13 Jun 2020 06:21:16 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Sat, 13 Jun 2020 06:21:16 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.study/</guid>
        <description>Build fast, reliable, and efficient software at scale https://go.dev/ https://godoc.org/ https://pkg.go.dev/ Effective Go https://golang.org/doc/effective_go.html Go by Example https://mingrammer.com/gobyexample/ Implementation of common Data Structures and Algorithms with Go https://github.com/punitpandey/ds-algo Collection of Technical Interview Questions solved with Go https://github.com/shomali11/go-interview Golang Tutorial https://www.golangprograms.com/ A Journey With Go https://medium.com/a-journey-with-go Exploring container package in Go (list, ring and heap) https://therebelsource.com/blog/exploring-container-package-in-go-list-ring-and-heap/9zTBiMaaYg Golang program for implementation of Radix Sort https://www.golangprograms.com/golang-program-for-implementation-of-radix-sort.html Learn Go with Tests https://quii.gitbook.io/learn-go-with-tests/ Welcome To</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>study</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Articles</title>
        <link>https://parksangkil.github.io/ko/posts/golang.articles/</link>
        <pubDate>Sat, 13 Jun 2020 06:18:01 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Sat, 13 Jun 2020 06:18:01 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.articles/</guid>
        <description>map[string]interface{} in Go
https://bitfieldconsulting.com/golang/map-string-interface
Stopping HTTP Server Gracefully: Context vs Channels vs SyncGroup
https://www.gollahalli.com/blog/stopping-http-server-gracefully-context-vs-channels-vs-syncgroup/
How to handle signals with Go to graceful shutdown HTTP server
https://rafallorenz.com/go/handle-signals-to-graceful-shutdown-http-server/
Experimenting with Error Handling via Generics in Go
https://deedlefake.com/experimenting-with-error-handling-via-generics-in-go.html
Why You Should Be Using errgroup.WithContext() in Your Golang Server Handlers
https://bionic.fullstory.com/why-you-should-be-using-errgroup-withcontext-in-golang-server-handlers/
Go: Debugging with Delve &amp;amp; Core Dumps
https://medium.com/a-journey-with-go/go-debugging-with-delve-core-dumps-384145b2e8d9
Go is Boring&amp;hellip;And That’s Fantastic!
https://www.capitalone.com/tech/software-engineering/go-is-boring/
Building a Golang Docker image
https://bitfieldconsulting.com/golang/docker-image</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>Golang_Articles</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      
      <item>
        <title>Golang Libraries</title>
        <link>https://parksangkil.github.io/ko/posts/golang.libraries/</link>
        <pubDate>Sat, 13 Jun 2020 06:13:36 +0900</pubDate>
        <author>ht1911@gmail.com (Park SangKil)</author>
        <atom:modified>Sat, 13 Jun 2020 06:13:36 +0900</atom:modified>
        <guid>https://parksangkil.github.io/ko/posts/golang.libraries/</guid>
        <description>A curated list of awesome Go frameworks, libraries and software
https://github.com/avelino/awesome-go
Go package for fast high-level image processing powered by libvips C library
https://github.com/h2non/bimg
A toolkit with common assertions and mocks that plays nicely with the standard library
https://github.com/stretchr/testify
Package goth provides a simple, clean, and idiomatic way to write authentication packages for Go web applications.
https://github.com/markbates/goth
Gostradamus: Better DateTimes for Go
https://github.com/bykof/gostradamus
Common golang code shared by multiple projects</description>
        
        <dc:creator>Park SangKil</dc:creator>
        
        
        
        
          
            
              <category>Golang_Libraries</category>
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>